---
- name: Verify
  hosts: molecule_hosts
  gather_facts: true
  tasks:
    - name: Verify legacy installs
      when:
        - ansible_facts.distribution_major_version is version("8", "<")
        - ck_mk_agent_version | default('2.0.0') is version("2", "<")
      block:
        - name: Gather check_mk agent xinetd config
          ansible.builtin.command: cat /etc/xinetd.d/check-mk-agent
          changed_when: false
          register: command_output

        - name: Assert check_mk agent xinetd config is valid
          ansible.builtin.assert:
            quiet: true
            that: >-
              command_output.stdout
              is search("server.*=.*/usr/bin/check_mk_agent")

    - name: Verify last versions install
      when: ck_mk_agent_version | default('2.0.0') is version("2", ">=")
      block:
        - name: Gather service facts
          ansible.builtin.service_facts:

        - name: Assert check_mk services ared valid
          ansible.builtin.assert:
            that:
              - check_mk_running_services | length > 0
              - check_mk_failed_services | length == 0
          vars:
            check_mk_running_services: >-
              {{ ansible_facts.services
                 | dict2items
                 | map(attribute="value")
                 | selectattr("name", "search", "cmk")
                 | selectattr("state", "equalto", "running")
                 | list }}

            check_mk_failed_services: >-
              {{ ansible_facts.services
                 | dict2items
                 | map(attribute="value")
                 | selectattr("name", "search", "cmk")
                 | rejectattr("state", "equalto", "running")
                 | rejectattr("state", "equalto", "unknown")
                 | list }}

    - name: Gather check_mk agent plugins directory
      ansible.builtin.shell: >-
        set -o pipefail ;
        /usr/bin/check_mk_agent
        | head -n 10
        | grep PluginsDirectory
        | awk '{ print $NF }'
      changed_when: false
      register: plugins_dir_result

    - name: Check plugins
      ansible.builtin.stat:
        path: "{{ plugins_dir_result.stdout }}/{{ item.file }}"
      register: stat_result
      loop: "{{ check_mk_agent_plugins_artifacts | default([]) }}"

    - name: Assert plugins are installed
      ansible.builtin.assert:
        quiet: true
        that: >-
          stat_result.results
          | selectattr("stat.exists", "equalto", false)
          | list
          | length == 0
  vars:
    ansible_python_interpreter: >-
      {{ (inventory_hostname in groups.molecule_hosts_centos_7)
         | ternary("/usr/bin/python", "/usr/bin/python3") }}
